#!/bin/bash

#  Copyright (c) 2019, 2024 Andy Kosela <akosela@andykosela.com>
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS''
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
#  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR
#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
#  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
#  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

inform=/usr/local/bin/inform
lib=/usr/local/share/inform615/minform
a8bin=/usr/local/share/inform615/bin/a8.bin
v=-v3

replay()
{
  bgame=`basename $game .key`
  if [ ! -z "`grep -e quit -e save $game`" ]; then
    sed -i'' '/^quit/d ; /^save/d' $game
  elif [ -z "`grep 'script off' $game`" ]; then
    echo "script off" >> $game
  fi

  echo -e "0a\nscript\n$bgame.scr\n.\n\$a\nsave\n$bgame.qzl\nquit\ny\ny\n.\nw" |
    ed - $game

  [ -e "$bgame.scr" ] && rm $bgame.scr
  [ -e "$bgame.qzl" ] && rm $bgame.qzl

  cat $game | frotz $story 1>/dev/null 2>&1
  echo -e "g/^script/d\ng/^quit/d\ng/^save/d\ng/.qzl/d\ng/.scr/d\ng/^y$/d\nw" |
    ed - $game
  echo "$bgame.scr - replay transcript file"
  echo "$bgame.qzl - replay save file"
  echo "$bgame.key - replay walkthrough file"
  exit 0
}

main()
{
  $inform -d2esi $v +$lib $game
  bgame=`basename $game .inf`
  if [ ! -z $a8bin ]; then
    cat $a8bin $bgame.z3 > $bgame.atr 2>/dev/null
    size=`ls -l $bgame.atr | cut -d' ' -f5`
    head --bytes $((133136-$size)) /dev/zero >> $bgame.atr
  fi
  exit 0
}

usage()
{
  echo "usage: inf game.inf"
  echo "       inf [-5] game.inf"
  echo "       inf [-r] game.scr game.z3"
  echo "       inf [-w] game.key game.z3"
  echo ""
  echo "       -5 : create v5 release"
  echo "       -r : replay game from a transcript file"
  echo "       -w : replay game from a walkthrough file"
  echo ""
  echo "By default inf creates Z-code v3 file and Atari 8-bit atr image."
  exit 0
}

# Start of script

if [ ! -z `echo $1 | grep '.inf'` ]; then
  game=$1
  main
elif [ -z "$1" ]; then
  usage
fi

while getopts 5:r:w:h opts
do
  case $opts in
    5) game=$2
       v=-v5
       a8bin=""
       main
    ;;
    r) game=$2
       game=`basename $game .scr`.key
       grep '>' $2 | cut -d'>' -f2 > $game
       story=$3
       replay
    ;;
    w) game=$2
       story=$3
       replay
    ;;
    h) usage
    ;;
    *) usage
    ;;
  esac
done
